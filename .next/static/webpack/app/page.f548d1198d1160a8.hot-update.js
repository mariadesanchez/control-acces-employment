"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./components/CameraCapture.tsx":
/*!**************************************!*\
  !*** ./components/CameraCapture.tsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ CameraCapture; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// \"use client\";\n// import React, { useEffect, useRef, useImperativeHandle } from \"react\";\n// type Props = {\n//   captureRef: React.MutableRefObject<() => Promise<File | null>>;\n// };\n// export default function CameraCapture({ captureRef }: Props) {\n//   const videoRef = useRef<HTMLVideoElement | null>(null);\n//   const canvasRef = useRef<HTMLCanvasElement | null>(null);\n//   const streamRef = useRef<MediaStream | null>(null);\n//   useEffect(() => {\n//     const start = async () => {\n//       try {\n//         const s = await navigator.mediaDevices.getUserMedia({\n//           video: { facingMode: \"user\" },\n//           audio: false,\n//         });\n//         streamRef.current = s;\n//         if (videoRef.current) videoRef.current.srcObject = s;\n//       } catch (e) {\n//         console.error(\"No se pudo acceder a la cámara\", e);\n//       }\n//     };\n//     start();\n//     return () => {\n//       streamRef.current?.getTracks().forEach((t) => t.stop());\n//     };\n//   }, []);\n//   // expone la función capture al padre\n//   useImperativeHandle(captureRef, () => async () => {\n//     const video = videoRef.current;\n//     const canvas = canvasRef.current;\n//     if (!video || !canvas) return null;\n//     canvas.width = video.videoWidth || 640;\n//     canvas.height = video.videoHeight || 480;\n//     const ctx = canvas.getContext(\"2d\");\n//     if (!ctx) return null;\n//     ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n//     const dataUrl = canvas.toDataURL(\"image/jpeg\", 0.9);\n//     const blob = dataURItoBlob(dataUrl);\n//     return new File([blob], `photo_${Date.now()}.jpg`, { type: \"image/jpeg\" });\n//   });\n//   const dataURItoBlob = (dataURI: string) => {\n//     const byteString = atob(dataURI.split(\",\")[1]);\n//     const mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n//     const ab = new ArrayBuffer(byteString.length);\n//     const ia = new Uint8Array(ab);\n//     for (let i = 0; i < byteString.length; i++) ia[i] = byteString.charCodeAt(i);\n//     return new Blob([ab], { type: mimeString });\n//   };\n//   return (\n//     <div>\n//       <video\n//         ref={videoRef}\n//         autoPlay\n//         playsInline\n//         style={{\n//           width: \"100%\",\n//           maxHeight: 480,\n//           borderRadius: 8,\n//           background: \"#000\",\n//         }}\n//       />\n//       <canvas ref={canvasRef} style={{ display: \"none\" }} />\n//     </div>\n//   );\n// }\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\nfunction CameraCapture(param) {\n    let { captureRef } = param;\n    _s();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const streamRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const start = async ()=>{\n            try {\n                const s = await navigator.mediaDevices.getUserMedia({\n                    video: {\n                        facingMode: \"user\"\n                    },\n                    audio: false\n                });\n                streamRef.current = s;\n                if (videoRef.current) videoRef.current.srcObject = s;\n            } catch (e) {\n                console.error(\"No se pudo acceder a la c\\xe1mara\", e);\n            }\n        };\n        start();\n        return ()=>{\n            var _streamRef_current;\n            (_streamRef_current = streamRef.current) === null || _streamRef_current === void 0 ? void 0 : _streamRef_current.getTracks().forEach((t)=>t.stop());\n        };\n    }, []);\n    // expone la función capture al padre\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useImperativeHandle)(captureRef, ()=>async ()=>{\n            const video = videoRef.current;\n            const canvas = canvasRef.current;\n            if (!video || !canvas) return null;\n            canvas.width = video.videoWidth || 640;\n            canvas.height = video.videoHeight || 480;\n            const ctx = canvas.getContext(\"2d\");\n            if (!ctx) return null;\n            ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n            const dataUrl = canvas.toDataURL(\"image/jpeg\", 0.9);\n            const blob = dataURItoBlob(dataUrl);\n            return new File([\n                blob\n            ], \"photo_\".concat(Date.now(), \".jpg\"), {\n                type: \"image/jpeg\"\n            });\n        });\n    const dataURItoBlob = (dataURI)=>{\n        const byteString = atob(dataURI.split(\",\")[1]);\n        const mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n        const ab = new ArrayBuffer(byteString.length);\n        const ia = new Uint8Array(ab);\n        for(let i = 0; i < byteString.length; i++)ia[i] = byteString.charCodeAt(i);\n        return new Blob([\n            ab\n        ], {\n            type: mimeString\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            display: \"flex\",\n            justifyContent: \"center\"\n        },\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                ref: videoRef,\n                autoPlay: true,\n                playsInline: true,\n                style: {\n                    width: \"85%\",\n                    maxWidth: \"280px\",\n                    aspectRatio: \"3/4\",\n                    borderRadius: 12,\n                    background: \"#000\",\n                    objectFit: \"cover\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/luckysanchez/Documents/control-acces-employment/components/CameraCapture.tsx\",\n                lineNumber: 137,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n                ref: canvasRef,\n                style: {\n                    display: \"none\"\n                }\n            }, void 0, false, {\n                fileName: \"/Users/luckysanchez/Documents/control-acces-employment/components/CameraCapture.tsx\",\n                lineNumber: 150,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/luckysanchez/Documents/control-acces-employment/components/CameraCapture.tsx\",\n        lineNumber: 136,\n        columnNumber: 5\n    }, this);\n}\n_s(CameraCapture, \"c6uUUxl/t2cfszwavie6m/qSHj8=\");\n_c = CameraCapture;\nvar _c;\n$RefreshReg$(_c, \"CameraCapture\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/CameraCapture.tsx\n"));

/***/ })

});